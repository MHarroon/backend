# Generated by Django 4.1.6 on 2023-02-18 16:44

import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ApplicationModel",
            fields=[
                (
                    "applicationID",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("FirstName", models.CharField(max_length=50)),
                ("MiddleName", models.CharField(max_length=50)),
                ("LastName", models.CharField(max_length=50)),
                ("FatherName", models.CharField(max_length=50)),
                ("CNIC", models.IntegerField()),
                ("Old_Nic", models.IntegerField()),
                ("CNIC_Is_Date", models.DateField(default=django.utils.timezone.now)),
                ("CNIC_Ex_Date", models.DateField(default=django.utils.timezone.now)),
                ("PassportNumber", models.CharField(max_length=50)),
                ("DateOfBirth", models.DateField(default=django.utils.timezone.now)),
                (
                    "MaritalStatus",
                    models.CharField(
                        choices=[
                            ("Married", "Married"),
                            ("Single", "Single"),
                            ("Divorced", "Divorced"),
                            ("Widowed", "Widowed"),
                        ],
                        max_length=50,
                    ),
                ),
                ("Children", models.IntegerField()),
                ("OtherDependants", models.CharField(max_length=50)),
                (
                    "Education",
                    models.CharField(
                        choices=[
                            ("Matric", "Matric"),
                            ("Intermediate", "Intermediate"),
                            ("A/O level", "A/O level"),
                            ("Master", "MAster"),
                            ("MPHill", "MPHill"),
                            ("PHD", "PHD"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "Gender",
                    models.CharField(
                        choices=[("Male", "Male"), ("Female", "Female")], max_length=50
                    ),
                ),
                ("address", models.CharField(max_length=50)),
                ("postalcode", models.CharField(max_length=50)),
                ("city", models.CharField(max_length=50)),
                ("mobileNumber", models.IntegerField()),
                ("email", models.EmailField(max_length=50)),
                (
                    "residentType",
                    models.CharField(
                        choices=[
                            ("Owned", "Owned"),
                            ("Rented", "Rented"),
                            ("Compnay", "Compnay"),
                            ("Parents", "Parents"),
                            ("MPHill", "MPHill"),
                            ("Financed/Leased", "Financed/Leased"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "accomodationType",
                    models.CharField(
                        choices=[
                            ("House", "House"),
                            ("Appartment", "Appartment"),
                            ("Portion", "Portion"),
                            ("Room", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("monthlyRent", models.IntegerField()),
                ("installementAmount", models.IntegerField()),
                ("permanentAddress", models.CharField(max_length=50)),
                ("prepostalcode", models.CharField(max_length=50)),
                ("cityPer", models.CharField(max_length=50)),
                (
                    "preresidentType",
                    models.CharField(
                        choices=[
                            ("Owned", "Owned"),
                            ("Rented", "Rented"),
                            ("Compnay", "Compnay"),
                            ("Parents", "Parents"),
                            ("MPHill", "MPHill"),
                            ("Financed/Leased", "Financed/Leased"),
                        ],
                        max_length=50,
                    ),
                ),
                ("numberOfCar", models.IntegerField()),
                ("Model", models.CharField(max_length=50)),
                ("C_CompnayName", models.CharField(max_length=50)),
                ("C_CompanyAddres", models.CharField(max_length=50)),
                ("C_JobTitle", models.CharField(max_length=50)),
                ("C_Department", models.CharField(max_length=50)),
                (
                    "C_EmployementSince",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("C_EmploymentNumber", models.CharField(max_length=50)),
                ("C_Extension", models.CharField(max_length=50)),
                ("C_OfficeEmail", models.EmailField(max_length=50)),
                (
                    "C_EmployementType",
                    models.CharField(
                        choices=[
                            ("Permanent", "Permanent"),
                            ("Contractual", "Contractual"),
                        ],
                        max_length=50,
                    ),
                ),
                ("P_CompnayName", models.CharField(max_length=50)),
                ("P_CompanyAddres", models.CharField(max_length=50)),
                ("P_JobTitle", models.CharField(max_length=50)),
                ("P_Department", models.CharField(max_length=50)),
                (
                    "P_EmployementSince",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "P_EmployementSinceT",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("P_EmploymentNumber", models.CharField(max_length=50)),
                ("P_Extension", models.CharField(max_length=50)),
                ("P_OfficeEmail", models.EmailField(max_length=50)),
                (
                    "P_EmployementType",
                    models.CharField(
                        choices=[
                            ("Permanent", "Permanent"),
                            ("Contractual", "Contractual"),
                        ],
                        max_length=50,
                    ),
                ),
                ("MonthlyGrossIncome", models.IntegerField()),
                ("MonthlyNetIncome", models.IntegerField()),
                (
                    "SalarayDisbursementDay",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("OtherVerIncome", models.IntegerField()),
                ("SourceOfOtherIncome", models.CharField(max_length=50)),
                ("AverageMonthlyIncome", models.IntegerField()),
                ("BankName", models.CharField(max_length=50)),
                ("AccountNumber", models.CharField(max_length=50)),
                (
                    "AccountType",
                    models.CharField(
                        choices=[
                            ("Current Account", "Current Account"),
                            ("Saving Account", "Saving Account"),
                        ],
                        max_length=50,
                    ),
                ),
                ("Branch", models.CharField(max_length=50)),
                (
                    "DesiredRepTenure",
                    models.CharField(
                        choices=[
                            ("1 Year", " 1 Year"),
                            ("2 Year ", "2 Year "),
                            ("3 Year", "3 Year "),
                            ("5 Year", "5 Year"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "LoanReqFor",
                    models.CharField(
                        choices=[
                            ("Wedding", "Wedding"),
                            ("Vacation", "Vacation"),
                            ("Studies", "Studies"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("s_LoanReqFor", models.CharField(max_length=50)),
                ("AmmountSoughtPKR", models.IntegerField()),
                ("IncomeAmountPreMonth", models.IntegerField()),
                ("numberOfBusiness", models.IntegerField()),
                ("businessTitle", models.CharField(max_length=50)),
                ("businessAddress", models.CharField(max_length=50)),
                ("businessType", models.CharField(max_length=50)),
                ("industryType", models.CharField(max_length=50)),
                ("ntnNumber", models.CharField(max_length=50)),
                (
                    "establishedSince",
                    models.DateField(default=django.utils.timezone.now),
                ),
                ("registerWith", models.CharField(max_length=50)),
                ("businessTelephoneNumber", models.IntegerField()),
                ("businessEmail", models.EmailField(max_length=50)),
                ("companyName", models.CharField(max_length=50)),
                (
                    "typeOfBusiness",
                    models.CharField(
                        choices=[
                            ("Sole Proprietorship", "Sole Proprietorship"),
                            ("Patnership", "Patnership"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("s_specify_TypeOFBusiness", models.CharField(max_length=50)),
                (
                    "professionalQualifications",
                    models.CharField(
                        choices=[
                            ("Chartered Accountant", "Chartered Accountant"),
                            ("Doctor", "Doctor"),
                            ("Engineer", "Engineer"),
                            ("Architect", "Architect"),
                            ("Other", "Other"),
                        ],
                        max_length=50,
                    ),
                ),
                ("R_FullName", models.CharField(max_length=50)),
                ("R_CINC", models.IntegerField()),
                ("R_PossportNumber", models.CharField(max_length=50)),
                ("R_Address", models.CharField(max_length=50)),
                ("R_TelephoneNumOffice", models.IntegerField()),
                ("R_TelephoneNumResidence", models.IntegerField()),
                ("R_Email", models.EmailField(max_length=50)),
                ("R_CellNumber", models.IntegerField()),
                ("R_Relationship", models.CharField(max_length=50)),
                ("R2_FullName", models.CharField(max_length=50)),
                ("R2_CINC", models.IntegerField()),
                ("R2_PossportNumber", models.CharField(max_length=50)),
                ("R2_Address", models.CharField(max_length=50)),
                ("R2_TelephoneNumOffice", models.IntegerField()),
                ("R2_TelephoneNumResidence", models.IntegerField()),
                ("R2_Email", models.EmailField(max_length=50)),
                ("R2_CellNumber", models.IntegerField()),
                ("R2_Relationship", models.CharField(max_length=50)),
                ("bankstatment", models.FileField(upload_to="employee/")),
                ("nicpic", models.FileField(upload_to="employee/")),
                ("kebill", models.FileField(upload_to="employee/")),
                ("gassbill", models.FileField(upload_to="employee/")),
                ("profilePic", models.FileField(upload_to="employee/")),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("username", models.CharField(max_length=255, unique=True)),
                ("email", models.CharField(max_length=255, unique=True)),
                ("password", models.CharField(max_length=255)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
